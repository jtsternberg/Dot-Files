#!/usr/bin/env php
<?php
# =============================================================================
# Make bookmarklet from Javascript file
# By Justin Sternberg <me@jtsternberg.com>
# https://github.com/jtsternberg/Dot-Files/blob/master/symdotfiles
#
# Version 1.0.0
#
# Creates a bookmarklet file from an existing Javascript file.
# Handy for adding to your browser.
# Example bookmarklets: https://github.com/jtsternberg/Basecamp-UI-Improvements-Bookmarklets
#
# Uses daringfireball's bookmarklet.pl
# http://daringfireball.net/2007/03/javascript_bookmarklet_builder
#
# Usage:
# bookmarklets path/to/source.js path/to/bookmarklet.js
#
# OR to bookmarklet-icize a directory of JS files:
# bookmarklets path/source/files/ path/to/bookmarklets/destination/
# =============================================================================

if ( ! isset( $argv[1] ) ) {
	echo 'Please pass the source and destination directories.';
	return;
}

function is_relative_path( $path ) {
	return 0 === strpos( $path, '~' );
}

function is_abs_path( $path ) {
	return 0 === strpos( $path, '/' );
}

function is_js_file( $file ) {
	return '.js' === substr( $file, -3 );
}

function make_bookmarklet( $js_file ) {
	global $destination_dir, $working_dir, $file_ext, $destination_file, $working_file;

	if ( $destination_file ) {

		$new_file = $destination_dir . $destination_file;

	} else {

		$new_file = str_replace( $working_dir, $destination_dir, $js_file );
		$new_file = str_replace(
			array( '.js', '//' ),
			array( '.' . $file_ext, '/' ),
			$new_file
		);
	}

	// print( __METHOD__ . ':' . __LINE__ .') : '. print_r( get_defined_vars(), true ) );

	$home = $_SERVER['HOME'];
	echo `perl $home/.dotfiles/bookmarklet.pl $js_file > $new_file`;

	$filesize = filesize( $new_file );

	if ( ! $filesize ) {
		echo 'Failed to create: ' . $new_file . '.';
		echo "\n";
	} else {
		$filesize = number_format( floatval( $filesize ) / 1024, 2 );
		echo $new_file . ' created: ' . $filesize . ' kB';
		echo "\n";
	}
}

$file_ext = $argv[3] ?? 'bookmarklet.js';
$working_dir = $argv[1] ?? '';
$working_file = '';
if ( is_js_file( $working_dir ) ) {
	$working_file = basename( $working_dir );
	$working_dir = dirname( $working_dir ) . '/';
} else {
	$working_dir = rtrim( $working_dir, '/' ) . '/';
}

if ( ! is_abs_path( $working_dir ) ) {
	$working_dir = $_SERVER['PWD'] . ( $working_dir ? '/' . $working_dir : '' );
}

$destination_dir = $argv[2] ?? $working_dir;
$destination_file = '';
if ( is_js_file( $destination_dir ) ) {
	$destination_file = basename( $destination_dir );
	$destination_dir = dirname( $destination_dir ) . '/';
} else {
	$destination_dir = rtrim( $destination_dir, '/' ) . '/';
}

if ( ! is_abs_path( $destination_dir ) ) {
	$path = $destination_dir;
	$destination_dir = $_SERVER['PWD'] . ( $path ? '/' . $path : '' );
	if ( $path && ! is_js_file( $path ) ) {
		$destination_dir .= '/';
	}
}

if ( ! is_dir( $destination_dir ) ) {
	mkdir( $destination_dir );
}

if ( $working_file ) {
	return make_bookmarklet( $working_dir . $working_file );
}

$files = glob( $working_dir . '*.js' );

if ( empty( $files ) ) {
	echo "Sorry, no .js files found in $working_dir\n\n";
	return;
}

foreach ( $files as $file ) {
	make_bookmarklet( $file );
}

